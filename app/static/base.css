*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --dark-purple: #393646;
  --middle-purple: #484362;
  --purple: #4e4288;
  --middle-light-purple: #8179ab;
  --middle-darker-purple: #413e55;
  --light-purle: #f4ecff;
  --white: #fbfaff;
  --black: #29282e;
  --code-snippet: var(--white);
  --main-white: var(--white);
}

h1 {
  font-size: 3rem;
  line-height: 1;
  text-transform: uppercase;
  letter-spacing: 0.4rem;
  font-weight: 700;
}

h2 {
  font-size: 2rem;
  font-weight: 600;
  color: var(--black);
  padding-block: 1rem;
}

p {
  font-size: 0.8rem;
  line-height: 1.7rem;
  color: var(--black);
}

body {
  font-family: "Poppins", sans-serif;
  display: flex;
  flex-flow: row;
  width: 100%;
  height: max(100vh, 480px);
  background-color: rgb(250, 246, 255);
}

side-navbar {
  width: clamp(340px, 24%, 400px);
  background-color: var(--middle-purple);
  padding-inline: 48px;
}

main-content {
  width: 100%;
  padding-inline: min(80px, 10%);
  background-color: white;
  color: var(--black);
  overflow-y: scroll;
  padding-top: 0px;
}

.sticky-h2 {
  position: sticky;
  top: 0px;
  left: 0px;
  background-color: white;
  z-index: 100;
  padding-top: 64px;
}

main-content::-webkit-scrollbar {
  background-color: var(--main-white);
}

main-content::-webkit-scrollbar-thumb {
  background-color: var(--main-white);
}

side-navbar{
  padding-block: 64px;
}

side-navbar h1 {
  margin-bottom: 32px;
  color: white;
}

nav {
  display: flex;
  flex-flow: column;
  color: var(--main-white);
}

nav a {
  margin-block: 2px;
  padding-block: 16px;
  padding-inline: 24px;
  text-decoration: none;
  color: var(--main-white);
  font-weight: 500;

  width: 100%;
  border-radius: 16px;
}

nav a.selected {
  background-color: var(--middle-darker-purple);
}

nav a:hover,
nav a.selected:hover {
  background-color: var(--dark-purple);
  -webkit-box-shadow: 8px 8px 24px -9pxvar (--dark-purple);
  -moz-box-shadow: 8px 8px 24px -9pxvar (--dark-purple);
  box-shadow: 8px 8px 24px -9pxvar (--dark-purple);
}

nav a:hover>nav a.selected:hover {
  background-color: var(--main-white);
}

.navbar-item{
  display: flex;
  flex-direction: row;
  gap: 16px;
}

.alert-container {
  padding-block: 16px;
  margin-block: 8px;
  background-color: var(--light-purle);
  border-radius: 16px;
  display: flex;
  flex-flow: row nowrap;
  margin-right: 16px;
}

section.alerts-list-wrapper {
  overflow-y: scroll;
  min-height: 250px;
  scrollbar-width: thin;
  scrollbar-color: var(--dark-purple) white;
  margin-top: 16px;
}

section.alerts-list-wrapper::-webkit-scrollbar {
  background-color: white;
  margin-inline: 8px;
}

section.alerts-list-wrapper::-webkit-scrollbar-thumb {
  background-color: var(--middle-purple);
  border-radius: 16px;
}

.alert-icon-wrapper,
.alert-bin-wrapper {
  width: 64px;
  display: flex;
  flex-direction: row;
  justify-content: center;
}

.icon {
  padding-top: 2px;
}

.alert-body-wrapper {
  width: 90%;
}

.alert-body-wrapper p{
  max-width: 80%;
}

.alert-bin-wrapper{
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  gap: 24px;

  height: 100%;
  padding-top: 8px;

  cursor: pointer;
}

.alert-bin-wrapper:hover {
  color: var(--black);
  background-color: transparent;
}

.hidden {
  display: none;
}

.alert-hidden {
  height: 60px;
  overflow: hidden;
  opacity: 0.5;
}

a{
  text-decoration: none;
}

input[type="checkbox"] {
  display: grid;
  grid-template-columns: 1.8em auto;
  gap: 0.6em;

  appearance: none;
  background-color: #fff;
  margin: 0;
  font: inherit;
  color: var(--dark-purple);
  width: 1.15em;
  height: 1.15em;
  border: 0.15em solid var(--dark-purple);
  border-radius: 0.15em;
  transform: translateY(-0.075em);
}

input[type="checkbox"]:checked::before {
  transform: scale(1);
}

input[type="checkbox"]::before {
  background-color: CanvasText;

  content: "";
  width: 0.8em;
  height: 0.8em;

  transform: scale(0);
  transition: 150ms transform ease-in-out;
  box-shadow: inset 1em 1em var(--dark-purple);

  transform-origin: bottom left;
  clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
}